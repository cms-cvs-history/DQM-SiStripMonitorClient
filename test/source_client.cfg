process TIFDQMSOURCES = {

  service = MessageLogger {
      untracked vstring destinations = { "cout" }
      untracked PSet cout = { untracked string threshold = "INFO" }
      untracked vstring debugModules   = { "SiStripZeroSuppression", "SiStripClusterizer"}
  }

service = AdaptorConfig {}
#include 
        source = PoolSource { 
          	untracked vstring fileNames = {
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.0.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.1.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.2.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.3.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.4.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.5.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.6.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.7.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.8.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.9.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.10.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.11.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.12.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.13.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.14.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.15.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.16.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.17.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.18.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.19.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.20.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.21.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.22.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.23.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.24.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.25.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.26.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.27.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.28.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.29.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.30.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.31.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.32.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.33.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.34.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.35.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.36.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.37.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.38.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.39.root',
        'rfio:/castor/cern.ch/cms/store/TAC/TIBTOB/edm_2007_03_07/tif.00006215.A.testStorageManager_0.40.root'

               }
         }
  untracked PSet maxEvents = {untracked int32 input = 1000}
  # magnetic field
#  include "Geometry/CMSCommonData/data/cmsMagneticFieldXML.cfi"
  include "MagneticField/Engine/data/uniformMagneticField.cfi"
  replace UniformMagneticFieldESProducer.ZFieldInTesla = 0.0
  es_prefer = UniformMagneticFieldESProducer{}

  # tracker geometry
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
 
  # tracker numbering
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
 
  # cms geometry
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"

  #-------------------------------------------------
  ## CALIBRATION
  #-------------------------------------------------

  #-------------------------------------------------
  ## CALIBRATION From Orcon
  #-------------------------------------------------

    ## CABLING
    include "CalibTracker/Configuration/data/SiStrip_FrontierCabling.cfi"
    replace siStripFedCabling.toGet={ { string record = "SiStripFedCablingRcd" string tag = "SiStripCabling_pass4_test_v1"} }
    replace siStripFedCabling.connect = "oracle://cms_orcoff_int2r/CMS_COND_STRIP"
    ## to use Frontier
    ## replace siStripFedCabling.connect = "frontier://FrontierDev/CMS_COND_STRIP" 
    replace siStripFedCabling.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"

    ## PEDESTALS
    include "CalibTracker/Configuration/data/SiStrip_FrontierPedestals.cfi"
    replace siStripPedestals.toGet={   { string record = "SiStripPedestalsRcd"  string tag = "SiStripPedestals_pass4_test_v1_p"}  }
    replace siStripPedestals.connect = "oracle://cms_orcoff_int2r/CMS_COND_STRIP"
    ## to use Frontier
    ## replace siStripPedestals.connect = "frontier://FrontierDev/CMS_COND_STRIP"
    replace siStripPedestals.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"

    ## NOISE
    include "CalibTracker/Configuration/data/SiStrip_FrontierNoise.cfi"
    replace siStripNoise.toGet={ { string record = "SiStripNoisesRcd"     string tag = "SiStripNoises_pass4_test_v1_n"} }
    replace siStripNoise.connect = "oracle://cms_orcoff_int2r/CMS_COND_STRIP"
    ## to use Frontier
    ## replace siStripNoise.connect = "frontier://FrontierDev/CMS_COND_STRIP"  
    replace siStripNoise.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"

    ## GAIN
    # Gain in TBufferStream needs to be uploaded, for the time being use fake source       ## FAKE CONDITIONS
    #include "CalibTracker/Configuration/data/SiStrip_FakePedestals.cfi"
    #include "CalibTracker/Configuration/data/SiStrip_FakeNoise.cfi"
    include "CalibTracker/Configuration/data/SiStrip_FakeGain.cfi"
    include "CalibTracker/Configuration/data/SiStrip_FakeLorentzAngle.cfi"
    include "CalibTracker/Configuration/data/Tracker_FakeAlignment.cfi"

    ## FAKE SiStripQuality
    include "CalibTracker/SiStripESProducers/data/SiStripQualityFakeESSource.cfi"

    #If Frontier is used in xdaq environment use the following service
    ##    service = SiteLocalConfigService {}

    #-----------------------
    ####  Reconstruction Modules
    #-----------------------

    include "EventFilter/SiStripRawToDigi/data/SiStripDigis.cfi"
    replace SiStripDigis.ProductLabel="source"

    include "RecoLocalTracker/SiStripZeroSuppression/data/SiStripZeroSuppression.cfi"

    include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer_RealData.cfi"

    include "AnalysisAlgos/SiStripClusterInfoProducer/data/SiStripClusterInfoProducer.cfi"

    include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"

    #--------------------------
    #### DQM
    #--------------------------
    # DQM services
    service = DaqMonitorROOTBackEnd{}

    # tracer service - very verbose - useful for debugging only
    #  service = Tracer { untracked string indention = "$$"}

    # can comment out MonitorDeamon if you want to run without DQMCollector - this should go as include in DQMServices
    #  include "DQM/SiStripMonitorCluster/data/MonitorDaemon.cfi"
    #  replace MonitorDaemon.DestinationAddress = "pccms56.pi.infn.it"
    #  replace MonitorDaemon.UpdateDelay = 5000

    service = DQMShipMonitoring{
   	//event-period for shipping monitoring to collector (default: 25)
     untracked uint32 period = 1000
    }

    #### MonitorPedestal ####
    # SiStripMonitorPedestals
    include "DQM/SiStripMonitorPedestals/data/SiStripMonitorPedestals.cfi"
    replace PedsMon.OutputMEsInRootFile = false

    #### SiStripMonitorDigi ####
    include "DQM/SiStripMonitorDigi/data/SiStripMonitorDigi_RealData.cfi"
    # use the following flag to select all detectors (e.g. for mtcc data). by default is false
    replace SiStripMonitorDigi.SelectAllDetectors = true

    #### SiStripMonitorCluster ####
    include "DQM/SiStripMonitorCluster/data/SiStripMonitorCluster.cfi"
    # use the following flag to select all detectors (e.g. for mtcc data). by default is false
    replace SiStripMonitorCluster.FillSignalNoiseHistos = false
    replace SiStripMonitorCluster.OutputMEsInRootFile = false
    replace SiStripMonitorCluster.UseCalibDataFromDB = true # this is for the noise service
    replace SiStripMonitorCluster.SelectAllDetectors = true

    ####  SiStripMonitorAnalyser) ####
    module sistripAnalyser = SiStripAnalyser {
      untracked int32  StaticUpdateFrequency = 2
      untracked int32  TkMapCreationFrequency = 2
      untracked int32  SummaryCreationFrequency = 2
    }

    #### Quality Tester ####
    module qTester = QualityTester {
      untracked string qtList = "sistrip_qualitytest_config.xml"
      untracked bool getQualityTestsFromFile = true	        
      untracked int32 QualityTestPrescaler = 200
    }

    #### BEGIN DQM Online Environment #####
    # use include file for dqmEnv dqmSaver
    include "DQMServices/Components/test/dqm_onlineEnv.cfi"
    # put your subsystem name here: 
    # DT, Ecal, Hcal, SiStrip, Pixel, RPC, CSC, L1T 
    # (this goes into the filename)
    replace dqmSaver.fileName = "SiStrip"
    replace dqmSaver.dirName       = "."
    # (this goes into the foldername)
    replace dqmEnv.subSystemFolder = "SiStrip"

    # optionally change fileSaving  conditions
    # replace dqmSaver.prescaleLS =   -1
    # replace dqmSaver.prescaleTime = -1 # in minutes
    # replace dqmSaver.prescaleEvt =  -1
    replace dqmSaver.saveAtRunEnd = true
    # replace dqmSaver.saveAtJobEnd = false
    # will add switch to select histograms to be saved soon
   

   service = ModuleWebRegistry { }


   service = LockService {
     untracked vstring labels = { "source" }
   }
  #----------------------------
  #### Scheduling
  #-----------------------------

  sequence digitization   = {SiStripDigis,siStripZeroSuppression}
  sequence clusterization = {siStripClusters}

      
  path p = {digitization, clusterization, SiStripMonitorDigi,SiStripMonitorCluster, qTester,sistripAnalyser, dqmEnv, dqmSaver }

}
